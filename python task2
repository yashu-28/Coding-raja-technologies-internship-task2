import sys
class BudgetTracker:
    def init(self, initial_balance):
        self.balance = initial_balance
        self.transactions = []

    def deposit(self, amount, description):
        self.balance += amount
        self.transactions.append((amount, description))

    def withdraw(self, amount, description):
        if amount <= self.balance:
            self.balance -= amount
            self.transactions.append((-amount, description))
        else:
            print("Insufficient funds!")

    def show_balance(self):
        print(f"Current balance: {self.balance}")

    def show_transactions(self):
        print("Transaction history:")
        for transaction in self.transactions:
            amount, description = transaction
            if amount > 0:
                print(f"Deposit: {amount} - {description}")
            else:
                print(f"Withdrawal: {-amount} - {description}")


def main():
    initial_balance = float(input("Enter initial balance: "))
    tracker = BudgetTracker(initial_balance)

    while True:
        print("\n1. Deposit")
        print("2. Withdraw")
        print("3. Show balance")
        print("4. Show transaction history")
        print("5. Exit")

        choice = input("Enter your choice: ")

        if choice == '1':
            amount = float(input("Enter deposit amount: "))
            description = input("Enter description: ")
            tracker.deposit(amount, description)
        elif choice == '2':
            amount = float(input("Enter withdrawal amount: "))
            description = input("Enter description: ")
            tracker.withdraw(amount, description)
        elif choice == '3':
            tracker.show_balance()
        elif choice == '4':
            tracker.show_transactions()
        elif choice == '5':
            print("Exiting...")
            break
        else:
            print("Invalid choice. Please try again.")


if name == "main":
    main()
TO DO LIST.txt
@@ -0,0 +1,78 @@
def display_menu():
    print("Menu:")
    print("1. Add Task")
    print("2. View Tasks")
    print("3. Mark as Done")
    print("4. Exit")


def add_task(tasks):
    task = input("Enter task description: ")
    tasks.append(task)
    print("Task added successfully!")


def view_tasks(tasks):
    print("\nTasks:")
    for i, task in enumerate(tasks, start=1):
        print(f"{i}. {task}")


def mark_task_done(tasks):
    if not tasks:
        print("No tasks to mark as done.")
        return


    view_tasks(tasks)
    index = int(input("Enter task index to mark as done: ")) - 1


    if 0 <= index < len(tasks):
        removed_task = tasks.pop(index)
        print(f"Task '{removed_task}' marked as done and removed.")
    else:
        print("Invalid task index.")


def save_tasks(tasks):
    with open("tasks.txt", "w") as f:
        for task in tasks:
            f.write(task + '\n')


def load_tasks():
    try:
        with open("tasks.txt", "r") as f:
            return f.read().splitlines()
    except FileNotFoundError:
        return []


def main():
    tasks = load_tasks()


    while True:
        display_menu()


        choice = input("Enter your choice: ")


        if choice == '1':
            add_task(tasks)
        elif choice == '2':
            view_tasks(tasks)
        elif choice == '3':
            mark_task_done(tasks)
        elif choice == '4':
            print("Exiting.")
            save_tasks(tasks)
            break
        else:
            print("Invalid choice. Please select a valid option.")


if name == "main":
    main()
